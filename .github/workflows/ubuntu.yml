name: ubuntu

on:
  push:
    branches:
      - master
      - 'release/**'
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '.github/workflows/*.yml'
      - '!.github/workflows/ubuntu.yml'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'

env:
  CORES: 2
  BUILD_MODE: normal
  GPG_VERSION: stable
  VCPKG_ROOT: '/usr/local/share/vcpkg'

jobs:
  tests:
    name: ${{ matrix.triplet }} ${{ matrix.build_type }} ${{ matrix.env.CC }}; GnuPG stable
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    timeout-minutes: 50
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        env:
          - CC: gcc
            CXX: g++
          - CC: clang
            CXX: clang++
        triplet: [x64-linux, x64-linux-dynamic]
        build_type: [Release, Debug]
    env: ${{ matrix.env }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - run: . ci/gha/setup-env.inc.sh
      - run: ci/install_noncacheable_dependencies.sh

      - if: matrix.triplet == 'x64-linux-dynamic'
        run: |
          cp ${{ env.VCPKG_ROOT }}/triplets/x64-linux.cmake ${{ env.VCPKG_ROOT }}/triplets/x64-linux-dynamic.cmake
          sed -i -- 's/static/dynamic/g' ${{ env.VCPKG_ROOT }}/triplets/x64-linux-dynamic.cmake

      - id: vcpkg-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.VCPKG_ROOT }}/installed
          key: vcpkg-${{ matrix.os }}-${{ hashFiles('vcpkg.txt') }}-${{ matrix.triplet }}

      - if: steps.vcpkg-cache.outputs.cache-hit != 'true'
        run: vcpkg install --triplet ${{ matrix.triplet }} --overlay-ports=vcpkg/ports $(cat vcpkg.txt)

      - run: ci/run.sh
        env:
          BUILD_TYPE: ${{ matrix.build_type }}
          VCPKG_TRIPLET: ${{ matrix.triplet }}

      - run: ci/build_package_deb.sh
        env:
          BUILD_TYPE: ${{ matrix.build_type }}
          VCPKG_TRIPLET: ${{ matrix.triplet }}

  cmake-offline-googletest-src:
    env:
      GTEST_SOURCES: /usr/src/googletest
      RNP_TESTS: rnp_tests
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - run: . ci/gha/setup-env.inc.sh
      - run: ci/install_noncacheable_dependencies.sh
      - run: sudo apt-get -y install googletest

      - id: vcpkg-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.VCPKG_ROOT }}/installed
          key: vcpkg-${{ matrix.os }}-${{ hashFiles('vcpkg.txt') }}-${{ matrix.triplet }}

      - if: steps.vcpkg-cache.outputs.cache-hit != 'true'
        run: vcpkg install --triplet x64-linux --overlay-ports=vcpkg/ports $(cat vcpkg.txt)

      - name: tests
        run: |
          set -x
          ci/run.sh
          [ -d "${LOCAL_BUILDS}/rnp-build/src/tests" ]
          [ -d "${LOCAL_BUILDS}/rnp-build/src/tests/googletest-build" ]
          [ ! -d "${LOCAL_BUILDS}/rnp-build/src/tests/googletest-src" ]
        env:
          VCPKG_TRIPLET: x64-linux
  cmake-offline-googletest:
    env:
      DOWNLOAD_GTEST: Off
      RNP_TESTS: rnp_tests
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    timeout-minutes: 50
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - run: . ci/gha/setup-env.inc.sh
      - run: ci/install_noncacheable_dependencies.sh
      - run: sudo apt-get -y install googletest

      - id: vcpkg-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.VCPKG_ROOT }}/installed
          key: vcpkg-${{ matrix.os }}-${{ hashFiles('vcpkg.txt') }}-${{ matrix.triplet }}

      - if: steps.vcpkg-cache.outputs.cache-hit != 'true'
        run: vcpkg install --triplet x64-linux --overlay-ports=vcpkg/ports $(cat vcpkg.txt)

      - name: Build googletest
        run: |
          set -x
          mkdir -p "${LOCAL_BUILDS}/googletest-build"
          pushd "${LOCAL_BUILDS}/googletest-build"
          cmake /usr/src/googletest
          sudo make -j2 install
          popd

      - name: tests
        run: |
          set -x
          ci/run.sh
          [ -d "${LOCAL_BUILDS}/rnp-build/src/tests" ]
          [ ! -d "${LOCAL_BUILDS}/rnp-build/src/tests/googletest-build" ]
          [ ! -d "${LOCAL_BUILDS}/rnp-build/src/tests/googletest-src" ]
        env:
          VCPKG_TRIPLET: x64-linux
  cmake-disable-rubyrnp:
    env:
      DOWNLOAD_RUBYRNP: Off
      RNP_TESTS: rnp_tests.hash_test_success
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    timeout-minutes: 50
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - run: . ci/gha/setup-env.inc.sh
      - run: ci/install_noncacheable_dependencies.sh

      - id: vcpkg-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.VCPKG_ROOT }}/installed
          key: vcpkg-${{ matrix.os }}-${{ hashFiles('vcpkg.txt') }}-${{ matrix.triplet }}

      - if: steps.vcpkg-cache.outputs.cache-hit != 'true'
        run: vcpkg install --triplet x64-linux --overlay-ports=vcpkg/ports $(cat vcpkg.txt)

      - name: tests
        run: |
          set -x
          ci/run.sh
          ls -la "${RNP_INSTALL}/lib/"librnp*.so
          ! ctest -N | grep 'ruby' > /dev/null
          ! ls -la src/tests/ | grep 'ruby' > /dev/null
        env:
          VCPKG_TRIPLET: x64-linux

  version-cmake-up-to-date:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          path: rnp
      - name: Download latest version.cmake
        uses: actions/checkout@v2
        with:
          repository: rnpgp/cmake-versioning
          fetch-depth: 1
          path: cmake-versioning
      - name: Compare
        run: |
          set -x
          diff "rnp/cmake/version.cmake" "cmake-versioning/version.cmake"
